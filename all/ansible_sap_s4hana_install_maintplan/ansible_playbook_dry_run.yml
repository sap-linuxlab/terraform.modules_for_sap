---
- name: Ansible Playbook dry-run for SAP S/4HANA installation media from SAP Maintenance Planner
  hosts: all
  become: false

  collections:
    - community.sap_launchpad

# Use include_role inside Task block, instead of using roles declaration or Task block with import_roles.
# This ensures Ansible Roles, and the tasks within, will be parsed in sequence instead of parsing at Playbook initialisation
  tasks:

    - name: Ensure packages are available for the Python used by Ansible on the localhost
      ansible.builtin.pip:
        name:
          - urllib3
          - requests
          - beautifulsoup4
          - lxml

# Use task block to call Ansible Module
    - name: Test x86_64 software availability - Execute Ansible Module with system Python to download installation media for SAP HANA and SAP NetWeaver for hosting SAP S/4HANA
      community.sap_launchpad.software_center_download:
        suser_id: "{{ suser_id }}"
        suser_password: "{{ suser_password }}"
        softwarecenter_search_query: "{{ item }}"
        dest: "{{ playbook_dir }}"
        dry_run: True
      with_items: "{{ softwarecenter_search_list_s4hana_install_x86_64 }}"
      when:
        - dry_run_test == "x86_64"
#      vars:
#        ansible_python_interpreter: python3.6

# Use task block to call Ansible Module
    - name: Test ppc64le software availability - Execute Ansible Module with system Python to download installation media for SAP HANA and SAP NetWeaver for hosting SAP S/4HANA
      community.sap_launchpad.software_center_download:
        suser_id: "{{ suser_id }}"
        suser_password: "{{ suser_password }}"
        softwarecenter_search_query: "{{ item }}"
        dest: "{{ playbook_dir }}"
        dry_run: True
      with_items: "{{ softwarecenter_search_list_s4hana_install_ppc64le }}"
      when:
        - dry_run_test == "ppc64le"
#      vars:
#        ansible_python_interpreter: python3.6

# Use task block to call Ansible Module
    - name: Test software list - Execute Ansible Module with system Python to get installation files list from SAP Maintenance Planner for an SAP S/4HANA installation
      community.sap_launchpad.maintenance_planner_files:
        suser_id: "{{ suser_id }}"
        suser_password: "{{ suser_password }}"
        transaction_name: "{{ transaction_name }}"
      register: sap_maintenance_planner_basket_register
#      vars:
#        ansible_python_interpreter: python3.6
#   - debug:
#       msg:
#         - "{{ sap_maintenance_planner_basket_register.download_basket }}"

# Use task block to call Ansible Module
    - name: Test software availability - Execute Ansible Module with system Python to download files returned from SAP Maintenance Planner for an SAP S/4HANA installation
      community.sap_launchpad.software_center_download:
        suser_id: "{{ suser_id }}"
        suser_password: "{{ suser_password }}"
        download_link: "{{ item.DirectLink }}"
        download_filename: "{{ item.Filename }}"
        dest: "{{ playbook_dir }}"
        dry_run: True
      loop: "{{ sap_maintenance_planner_basket_register.download_basket }}"
