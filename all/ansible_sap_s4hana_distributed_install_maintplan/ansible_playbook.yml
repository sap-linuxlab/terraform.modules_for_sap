---
# Ansible Playbook for SAP S/4HANA distributed installation using SAP Maintenance Planner

# Use include_role inside Task block, instead of using roles declaration or Task block with import_roles.
# This ensures Ansible Roles, and the tasks within, will be parsed in sequence instead of parsing at Playbook initialisation

- name: Ansible Play for ensuring rsync on all hosts
  hosts: hana_primary, nwas_ascs, nwas_pas, nwas_aas
  become: true
  any_errors_fatal: true # https://docs.ansible.com/ansible/latest/user_guide/playbooks_error_handling.html#aborting-a-play-on-all-hosts
  tasks:

    - name: Install rsync
      ansible.builtin.package:
        name:
        - rsync
        state: present



#### Begin downloading SAP software installation media to hosts ####

- name: Ansible Play for preparing downloads of SAP Software installation media
  hosts: nwas_pas
  become: true
  any_errors_fatal: true # https://docs.ansible.com/ansible/latest/user_guide/playbooks_error_handling.html#aborting-a-play-on-all-hosts
  tasks:

    - name: Create directories if does not exist
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      with_items:
        - "{{ sap_install_media_detect_directory }}"
        - "{{ sap_hana_install_software_directory }}"

    - name: Install Python package manager pip3 to system Python
      ansible.builtin.package:
        name: python3-pip
        state: present

    - name: Install Python package manager lxml to system Python when ppc64le
      ansible.builtin.package:
        name:
        - python3-lxml
        - libxslt-devel
        - libxml2-devel
        state: present
      when:
        - ansible_architecture == "ppc64le"

    - name: Install Python dependency wheel to system Python
      ansible.builtin.pip:
        name:
          - wheel
#        executable: pip3.6

    - name: Install Python dependencies for Ansible Modules to system Python
      ansible.builtin.pip:
        name:
          - urllib3
          - requests
          - beautifulsoup4
          - lxml
#        executable: pip3.6



- name: Ansible Play for downloading SAP S/4HANA installation media
  hosts: nwas_pas
  become: true
  any_errors_fatal: true # https://docs.ansible.com/ansible/latest/user_guide/playbooks_error_handling.html#aborting-a-play-on-all-hosts
  tasks:

    - name: Set fact x86_64 softwarecenter_search_list_sapcar
      set_fact:
        softwarecenter_search_list_sapcar: "{{ softwarecenter_search_list_sapcar_x86_64 }}"
      when:
        - ansible_architecture == "x86_64"

    - name: Set fact ppc64le softwarecenter_search_list_sapcar
      set_fact:
        softwarecenter_search_list_sapcar: "{{ softwarecenter_search_list_sapcar_ppc64le }}"
      when:
        - ansible_architecture == "ppc64le"

    - name: Execute Ansible Module with system Python to download SAPCAR
      community.sap_launchpad.software_center_download:
        suser_id: "{{ suser_id }}"
        suser_password: "{{ suser_password }}"
        softwarecenter_search_query: "{{ item }}"
        dest: "{{ sap_install_media_detect_directory }}"
      with_items: "{{ softwarecenter_search_list_sapcar }}"
      register: download_task
      retries: 1
      until: download_task is not failed
#      vars:
#        ansible_python_interpreter: python3.6

# Use task block to call Ansible Module
    - name: Execute Ansible Module with system Python to download SAP Maintenance Planner Stack XML for the SAP S/4HANA installation
      community.sap_launchpad.maintenance_planner_stack_xml_download:
        suser_id: "{{ suser_id }}"
        suser_password: "{{ suser_password }}"
        transaction_name: "{{ sap_mp_transaction_name }}"
        dest: "{{ sap_install_media_detect_directory }}"
#      vars:
#        ansible_python_interpreter: python3.6

# Use task block to call Ansible Module
    - name: Execute Ansible Module with system Python to get installation files list from SAP Maintenance Planner for an SAP S/4HANA installation
      community.sap_launchpad.maintenance_planner_files:
        suser_id: "{{ suser_id }}"
        suser_password: "{{ suser_password }}"
        transaction_name: "{{ sap_mp_transaction_name }}"
      register: sap_maintenance_planner_basket_register
#      vars:
#        ansible_python_interpreter: python3.6
#   - debug:
#       msg:
#         - "{{ sap_maintenance_planner_basket_register.download_basket }}"

# Use task block to call Ansible Module
    - name: Execute Ansible Module with system Python to download files returned from SAP Maintenance Planner for an SAP S/4HANA installation
      community.sap_launchpad.software_center_download:
        suser_id: "{{ suser_id }}"
        suser_password: "{{ suser_password }}"
        download_link: "{{ item.DirectLink }}"
        download_filename: "{{ item.Filename }}"
        dest: "{{ sap_install_media_detect_directory }}"
      loop: "{{ sap_maintenance_planner_basket_register.download_basket }}"
      register: download_task
      retries: 1
      until: download_task is not failed

    - name: Find SAP HANA installation media
      find:
        paths:
          - "{{ sap_install_media_detect_directory }}"
        patterns: "{{ sap_hana_install_media_dictionary.sap_hana_2_sps06_install.software_files_wildcard_list }}"
      register: sap_hana_install_media_files

    - name: Find SAP NetWeaver ASCS installation media
      find:
        paths:
          - "{{ sap_install_media_detect_directory }}"
        patterns: "{{ sap_swpm_templates_install_dictionary[sap_swpm_templates_product_input_prefix + '_nwas_ascs'].software_files_wildcard_list }}"
      register: sap_nwas_ascs_install_media_files

    - name: Find SAP NetWeaver AAS installation media
      find:
        paths:
          - "{{ sap_install_media_detect_directory }}"
        patterns: "{{ sap_swpm_templates_install_dictionary[sap_swpm_templates_product_input_prefix + '_nwas_aas'].software_files_wildcard_list }}"
      register: sap_nwas_aas_install_media_files

    - name: Prepare for file transfers, copy Private SSH Key used in Terraform deployment (temporary)
      copy:
        src: "{{ inventory_dir }}/hosts_rsa"
        dest: "/tmp/hosts_rsa"
        mode: "0400"



- name: Ansible Play for copying SAP HANA Database Server installation media to other hosts
  hosts: hana_primary
  become: true
  any_errors_fatal: true # https://docs.ansible.com/ansible/latest/user_guide/playbooks_error_handling.html#aborting-a-play-on-all-hosts
  tasks:

    - name: Set var of IP Address of SAP NetWeaver PAS
      set_fact:
        sap_nwas_pas_hostname: "{{sap_inventory_nw_pas_hostname}}"
        sap_nwas_pas_ip: "{{sap_inventory_nw_pas_ip}}"

    - name: Set var of files list from SAP NWAS, using lookup from Ansible hostvars with key as SAP NWAS PAS IP Address
      set_fact:
        sap_hana_install_media_files_list: "{{ hostvars[sap_nwas_pas_hostname].sap_hana_install_media_files.files | map(attribute='path') | list }}"

    - name: Transfer SAP HANA installation media to SAP HANA Primary and SAP HANA Secondary
      delegate_to: "{{ sap_nwas_pas_ip }}"
      synchronize:
        src: "{{ item }}"
        dest: "{{ sap_install_media_detect_directory }}"
        mode: "push"
        dest_port: 22
        use_ssh_args: false
        verify_host: false
        private_key: "/tmp/hosts_rsa"
#        set_remote_user: false
      with_items: "{{ sap_hana_install_media_files_list }}"



- name: Ansible Play for copying SAP NetWeaver ASCS installation media to host
  hosts: nwas_ascs
  become: true
  any_errors_fatal: true # https://docs.ansible.com/ansible/latest/user_guide/playbooks_error_handling.html#aborting-a-play-on-all-hosts
  tasks:

    - name: Set var of IP Address of SAP NetWeaver PAS
      set_fact:
        sap_nwas_pas_hostname: "{{sap_inventory_nw_pas_hostname}}"
        sap_nwas_pas_ip: "{{sap_inventory_nw_pas_ip}}"

    - name: Set var of files list from SAP NWAS, using lookup from Ansible hostvars with key as SAP NWAS PAS IP Address
      set_fact:
        sap_nwas_ascs_install_media_files_list: "{{ hostvars[sap_nwas_pas_hostname].sap_nwas_ascs_install_media_files.files | map(attribute='path') | list }}"

    - name: Transfer SAP NetWeaver ASCS installation media to host
      delegate_to: "{{ sap_nwas_pas_ip }}"
      synchronize:
        src: "{{ item }}"
        dest: "{{ sap_install_media_detect_directory }}"
        mode: "push"
        dest_port: 22
        use_ssh_args: false
        verify_host: false
        private_key: "/tmp/hosts_rsa"
#        set_remote_user: false
      with_items: "{{ sap_nwas_ascs_install_media_files_list }}"



- name: Ansible Play for copying SAP NetWeaver AAS installation media to host
  hosts: nwas_aas
  become: true
  any_errors_fatal: true # https://docs.ansible.com/ansible/latest/user_guide/playbooks_error_handling.html#aborting-a-play-on-all-hosts
  tasks:

    - name: Set var of IP Address of SAP NetWeaver PAS
      set_fact:
        sap_nwas_pas_hostname: "{{sap_inventory_nw_pas_hostname}}"
        sap_nwas_pas_ip: "{{sap_inventory_nw_pas_ip}}"

    - name: Set var of files list from SAP NWAS, using lookup from Ansible hostvars with key as SAP NWAS PAS IP Address
      set_fact:
        sap_nwas_aas_install_media_files_list: "{{ hostvars[sap_nwas_pas_hostname].sap_nwas_aas_install_media_files.files | map(attribute='path') | list }}"

    - name: Transfer SAP NetWeaver AAS installation media to host
      delegate_to: "{{ sap_nwas_pas_ip }}"
      synchronize:
        src: "{{ item }}"
        dest: "{{ sap_install_media_detect_directory }}"
        mode: "push"
        dest_port: 22
        use_ssh_args: false
        verify_host: false
        private_key: "/tmp/hosts_rsa"
#        set_remote_user: false
      with_items: "{{ sap_nwas_aas_install_media_files_list }}"



- name: Ansible Play to remove temporary files from SAP NetWeaver PAS
  hosts: nwas_pas
  become: true
  any_errors_fatal: true # https://docs.ansible.com/ansible/latest/user_guide/playbooks_error_handling.html#aborting-a-play-on-all-hosts
  tasks:

    - name: Remove temporary file, if it exists
      file:
        path: "/tmp/hosts_rsa"
        state: absent



#### Begin SAP software hosts preparation ####

- name: Ansible Play for preparing all SAP software hosts
  hosts: hana_primary, nwas_ascs, nwas_pas, nwas_aas
  become: true
  any_errors_fatal: true # https://docs.ansible.com/ansible/latest/user_guide/playbooks_error_handling.html#aborting-a-play-on-all-hosts
  tasks:

    - name: Update etc hosts
      lineinfile:
        dest: /etc/hosts
        line: "{{ item }}"
        state: present
      loop:
        - "{{sap_inventory_hana_primary_ip}}\t{{ sap_inventory_hana_primary_hostname }}.{{ ansible_domain }}\t{{ sap_inventory_hana_primary_hostname }}"
        - "{{sap_inventory_nw_ascs_ip}}\t{{ sap_inventory_nw_ascs_hostname }}.{{ ansible_domain }}\t{{ sap_inventory_nw_ascs_hostname }}"
        - "{{sap_inventory_nw_pas_ip}}\t{{ sap_inventory_nw_pas_hostname }}.{{ ansible_domain }}\t{{ sap_inventory_nw_pas_hostname }}"
        - "{{sap_inventory_nw_aas_ip}}\t{{ sap_inventory_nw_aas_hostname }}.{{ ansible_domain }}\t{{ sap_inventory_nw_aas_hostname }}"
#        - "{{hostvars[ansible_host].groups.nwas_aas[0]}}\t{{ ansible_hostname }}.{{ ansible_domain }}\t{{ ansible_hostname }}"

    - name: Execute Ansible Role sap_general_preconfigure
      include_role:
        name: { role: community.sap_install.sap_general_preconfigure }


- name: Ansible Play for preparing all SAP NetWeaver hosts
  hosts: nwas_ascs, nwas_pas, nwas_aas
  become: true
  any_errors_fatal: true # https://docs.ansible.com/ansible/latest/user_guide/playbooks_error_handling.html#aborting-a-play-on-all-hosts
  tasks:
    - name: Execute Ansible Role sap_netweaver_preconfigure
      include_role:
        name: { role: community.sap_install.sap_netweaver_preconfigure }
#      vars:
#        - ## ADD REBOOT VAR HERE


- name: Ansible Play for preparing all SAP HANA hosts
  hosts: hana_primary
  become: true
  any_errors_fatal: true # https://docs.ansible.com/ansible/latest/user_guide/playbooks_error_handling.html#aborting-a-play-on-all-hosts
  tasks:
    - name: Execute Ansible Role sap_hana_preconfigure
      include_role:
        name: { role: community.sap_install.sap_hana_preconfigure }
#      vars:
#        - ## ADD REBOOT VAR HERE


#### Begin SAP software installations ####

- name: Ansible Play for SAP HANA Database Server installation
  hosts: hana_primary
  become: true
  any_errors_fatal: true # https://docs.ansible.com/ansible/latest/user_guide/playbooks_error_handling.html#aborting-a-play-on-all-hosts
  tasks:

    - name: Execute Ansible Role sap_install_media_detect
      include_role:
        name: { role: community.sap_install.sap_install_media_detect }
      vars:
        - sap_install_media_detect_directory: "{{ sap_install_media_detect_directory }}"
        - sap_install_media_detect_source: local_dir
        - sap_install_media_detect_db: "saphana"
        - sap_install_media_detect_swpm: false
        - sap_install_media_detect_hostagent: true
        - sap_install_media_detect_igs: false
        - sap_install_media_detect_kernel: false
        - sap_install_media_detect_webdisp: false

    # Install SAP HANA
    - name: Execute Ansible Role sap_hana_install
      include_role:
        name: { role: community.sap_install.sap_hana_install }



- name: Ansible Play for SAP NetWeaver Application Server installation - ABAP Central Services (ASCS)
  hosts: nwas_ascs
  become: true
  any_errors_fatal: true # https://docs.ansible.com/ansible/latest/user_guide/playbooks_error_handling.html#aborting-a-play-on-all-hosts
  tasks:

    - name: Execute Ansible Role sap_install_media_detect
      include_role:
        name: { role: community.sap_install.sap_install_media_detect }
      vars:
        - sap_install_media_detect_directory: "{{ sap_install_media_detect_directory }}"
        - sap_install_media_detect_source: local_dir
        - sap_install_media_detect_db: "saphana"
        - sap_install_media_detect_swpm: true
        - sap_install_media_detect_hostagent: true
        - sap_install_media_detect_igs: true
        - sap_install_media_detect_kernel: true
        - sap_install_media_detect_webdisp: false

    # Install SAP NetWeaver ASCS via Ansible Role sap_swpm
    - name: Execute Ansible Role sap_swpm
      include_role:
        name: { role: community.sap_install.sap_swpm }
      vars:
        - sap_swpm_templates_product_input: "{{sap_swpm_templates_product_input_prefix}}_nwas_ascs"



- name: Ansible Play for SAP NetWeaver Application Server - Installation Export Database Load from the Primary Application Server (PAS)
  hosts: nwas_pas
  become: true
  any_errors_fatal: true # https://docs.ansible.com/ansible/latest/user_guide/playbooks_error_handling.html#aborting-a-play-on-all-hosts
  tasks:

    - name: Execute Ansible Role sap_install_media_detect
      include_role:
        name: { role: community.sap_install.sap_install_media_detect }
      vars:
        - sap_install_media_detect_directory: "{{ sap_install_media_detect_directory }}"
        - sap_install_media_detect_source: local_dir
        - sap_install_media_detect_db: "saphana"
        - sap_install_media_detect_swpm: true
        - sap_install_media_detect_hostagent: true
        - sap_install_media_detect_igs: true
        - sap_install_media_detect_kernel: true
        - sap_install_media_detect_webdisp: false
        #- sap_install_media_detect_export: "s4hana" # Not required for SAP S/4HANA when using archive download basket

    # Install SAP NetWeaver PAS via Ansible Role sap_swpm
    - name: Execute Ansible Role sap_swpm
      include_role:
        name: { role: community.sap_install.sap_swpm }
      vars:
        - sap_swpm_templates_product_input: "{{sap_swpm_templates_product_input_prefix}}_nwas_pas_dbload"



- name: Ansible Play for SAP NetWeaver Application Server - Primary Application Server (PAS)
  hosts: nwas_pas
  become: true
  any_errors_fatal: true # https://docs.ansible.com/ansible/latest/user_guide/playbooks_error_handling.html#aborting-a-play-on-all-hosts
  tasks:

    - name: Execute Ansible Role sap_install_media_detect
      include_role:
        name: { role: community.sap_install.sap_install_media_detect }
      vars:
        - sap_install_media_detect_directory: "{{ sap_install_media_detect_directory }}"
        - sap_install_media_detect_source: local_dir
        - sap_install_media_detect_db: "saphana"
        - sap_install_media_detect_swpm: true
        - sap_install_media_detect_hostagent: true
        - sap_install_media_detect_igs: true
        - sap_install_media_detect_kernel: true
        - sap_install_media_detect_webdisp: false

    # Install SAP NetWeaver PAS via Ansible Role sap_swpm
    - name: Execute Ansible Role sap_swpm
      include_role:
        name: { role: community.sap_install.sap_swpm }
      vars:
        - sap_swpm_templates_product_input: "{{sap_swpm_templates_product_input_prefix}}_nwas_pas"

#    - name: Execute Ansible Role sap_profile_update to update Profile for ICM HTTPS
#      include_role:
#        name: { role: community.sap_operations.sap_profile_update }

#    - name: Execute Ansible Role sap_control to restart SAP System/s for Profile update changes
#      include_role:
#        name: { role: community.sap_operations.sap_control }
#      vars:
#        sap_control_function: "restart_all_sap"



- name: Ansible Play for SAP NetWeaver Application Server - Additional Application Servers (AAS)
  hosts: nwas_aas
  become: true
  any_errors_fatal: true # https://docs.ansible.com/ansible/latest/user_guide/playbooks_error_handling.html#aborting-a-play-on-all-hosts
  tasks:

    - name: Execute Ansible Role sap_install_media_detect
      include_role:
        name: { role: community.sap_install.sap_install_media_detect }
      vars:
        - sap_install_media_detect_directory: "{{ sap_install_media_detect_directory }}"
        - sap_install_media_detect_source: local_dir
        - sap_install_media_detect_db: "saphana"
        - sap_install_media_detect_swpm: true
        - sap_install_media_detect_hostagent: true
        - sap_install_media_detect_igs: true
        - sap_install_media_detect_kernel: true
        - sap_install_media_detect_webdisp: false

    # Install SAP NetWeaver AAS via Ansible Role sap_swpm
    - name: Execute Ansible Role sap_swpm
      include_role:
        name: { role: community.sap_install.sap_swpm }
      vars:
        - sap_swpm_templates_product_input: "{{sap_swpm_templates_product_input_prefix}}_nwas_aas"
        - sap_swpm_mp_stack_path: null # override to ensure MP Stack XML file is not used (i.e. override set_fact loop for all hosts)

#    - name: Execute Ansible Role sap_profile_update to update Profile for ICM HTTPS
#      include_role:
#        name: { role: community.sap_operations.sap_profile_update }

#    - name: Execute Ansible Role sap_control to restart SAP System/s for Profile update changes
#      include_role:
#        name: { role: community.sap_operations.sap_control }
#      vars:
#        sap_control_function: "restart_all_sap"
